---
openapi: 3.0.0
info:
  title: SurfApp
  description: Web API to manage games and groups composed by them
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/GoncaloJCA/SurfApp/1.0.0
  description: SwaggerHub API Auto Mocking
paths:
  /api/users:
    get:
      summary: fetches list of users
      operationId: getUsersApi
      responses:
        "200":
          description: response body should be a user object array
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "404":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      summary: creates a user
      operationId: postUserApi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_users_body'
      responses:
        "201":
          description: response body should be a user object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/id'
        "400":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "404":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "409":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /api/users/{id}:
    get:
      summary: fetches a single user
      operationId: getUserByIdApi
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: response body should be a user object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/userById'
        "400":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "404":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    put:
      summary: updates a user
      operationId: updateUserApi
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_id_body'
      responses:
        "200":
          description: response body should be a user object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/userById'
        "400":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "404":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      summary: deletes a user
      operationId: deleteUserApi
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: response body should be a message object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/message'
        "400":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "404":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /api/users/sports:
    get:
      summary: fetches all sports associated with the users
      operationId: getUsersSportsApi
      responses:
        "200":
          description: response body should be a sport object joined with user object array
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/sportJoinUser'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /api/users/sports/{sid}:
    get:
      summary: fetches all sports associated with the users
      operationId: getUsersSportApi
      parameters:
      - name: sid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: response body should be a sport object joined with user object array
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/sportJoinUser'
        "400":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "404":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /api/users/{id}/sports:
    get:
      summary: fetches all users associated with the sport
      operationId: getUserSportsByIdApi
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: response body should be a sport object joined with user object array
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/sportJoinUser'
        "400":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "404":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      summary: creates a user sport
      operationId: postUserSportApi
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/id_sports_body'
      responses:
        "201":
          description: response body should be a user object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/id'
        "400":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "404":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "409":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /api/users/{id}/sports/{sid}:
    put:
      summary: updates a user sport
      operationId: updateUserSportApi
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: sid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sports_sid_body'
      responses:
        "201":
          description: response body should be a user object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/id'
        "400":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "404":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "409":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      summary: deleted a user sport
      operationId: deleteUserSportApi
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: sid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: response body should be a user object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/id'
        "400":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "404":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /api/sports:
    get:
      summary: fetches a list of sports
      operationId: getSportsApi
      responses:
        "200":
          description: response body should be a user object array
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/sport'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "404":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      summary: creates a sport
      operationId: postSportApi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_sports_body'
      responses:
        "201":
          description: response body should be a user object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/id'
        "400":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "404":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "409":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /api/sports/{sid}:
    get:
      summary: fetches a single sport
      operationId: getSportByIdApi
      parameters:
      - name: sid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: response body should be a user object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/sportById'
        "400":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "404":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      summary: deletes a sport
      operationId: deleteSportApi
      parameters:
      - name: sid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: response body should be a sport object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/message'
        "400":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "404":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /api/quotas:
    get:
      summary: fetches all quotas
      operationId: getQuotasApi
      responses:
        "200":
          description: response body should be a quotas object  array
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/quota'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      summary: creates a quota
      operationId: postQuotaApi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_quotas_body'
      responses:
        "201":
          description: response body should be a user object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/id'
        "400":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /api/quotas/{id}:
    put:
      summary: updates a quota
      operationId: updateMemberQuotaApi
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/quotas_id_body'
      responses:
        "200":
          description: response body should be a user object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/id'
        "400":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /api/quotas/users:
    get:
      summary: fetches all quotas from users
      operationId: getUsersQuotasApi
      responses:
        "200":
          description: response body should be a quota object array
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/quota'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /api/quotas/companies:
    get:
      summary: fetches all quotas from companies
      operationId: getCompaniesQuotasApi
      responses:
        "200":
          description: response body should be a quota object array
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/quota'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /api/quotas/members/{id}:
    get:
      summary: fetches all quotas from companies
      operationId: getMembersQuotasApi
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: response body should be a quota object array
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/quota'
        "400":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "404":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /api/companies:
    get:
      summary: fetches all companies
      operationId: getCompaniesApi
      responses:
        "200":
          description: response body should be a company object array
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/company'
        "400":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "404":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      summary: creates a quota
      operationId: postCompanyApi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_companies_body'
      responses:
        "201":
          description: response body should be a user object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/id'
        "400":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /api/companies/{cid}:
    get:
      summary: fetches a specific company
      operationId: getCompanyByIdApi
      parameters:
      - name: cid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: response body should be a company object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/companyById'
        "400":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "404":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    put:
      summary: updates a company
      operationId: putCompanyApi
      parameters:
      - name: cid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/companies_cid_body'
      responses:
        "200":
          description: response body should be an id
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/id'
        "400":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "500":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      summary: deletes a company
      operationId: deleteCompanyApi
      parameters:
      - name: cid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: response body should be a message object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/message'
        "400":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "404":
          description: response body should be an error object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
components:
  schemas:
    message:
      required:
      - message
      type: object
      properties:
        message:
          type: string
    id:
      type: integer
    user:
      required:
      - birth_date_
      - cc_
      - enrollment_date_
      - full_name_
      - is_admin_
      - member_id_
      - nationality_
      - nif_
      - paid_enrollment_
      type: object
      properties:
        member_id_:
          type: integer
        cc_:
          type: integer
        nif_:
          type: integer
        birth_date_:
          type: string
          format: date
        full_name_:
          type: string
        enrollment_date_:
          type: string
          format: date
        is_admin_:
          type: boolean
    userById:
      required:
      - address_
      - birth_date_
      - cc_
      - email_
      - enrollment_date_
      - full_name_
      - is_admin_
      - location_
      - member_id_
      - nationality_
      - nif_
      - paid_enrollment_
      - phone_number_
      - postal_code_
      type: object
      properties:
        member_id_:
          type: integer
        cc_:
          type: integer
        nif_:
          type: integer
        birth_date_:
          type: string
          format: date
        full_name_:
          type: string
        enrollment_date_:
          type: string
          format: date
        is_admin_:
          type: boolean
        location_:
          type: string
        address_:
          type: string
        postal_code_:
          type: string
          format: ^\d{4}-\d{3}$
        email_:
          type: string
        phone_number_:
          type: integer
    sport:
      required:
      - id_
      - name_
      type: object
      properties:
        id_:
          type: integer
        name_:
          type: string
    sportById:
      required:
      - id_
      - name_
      type: object
      properties:
        id_:
          type: integer
        name_:
          type: string
    error:
      required:
      - message
      type: object
      properties:
        message:
          type: string
        status:
          type: integer
    html:
      type: string
      example: <html>HTML text</html>
    api_users_body:
      type: object
      properties:
        cc:
          type: integer
        nif:
          type: integer
        type:
          type: string
        birth_date:
          type: string
          format: date
        full_name:
          type: string
        enrollment_date:
          type: string
          format: date
        is_admin:
          type: boolean
        location:
          type: string
        address:
          type: string
        postal_code:
          type: string
          format: ^\d{4}-\d{3}$
        email:
          type: string
        phone_number:
          type: integer
        password:
          type: string
          format: password
        username:
          type: string
        paid_enrollment:
          type: boolean
    users_id_body:
      type: object
      properties:
        cc_:
          type: integer
        nif_:
          type: integer
        type_:
          type: string
        birth_date_:
          type: string
          format: date
        full_name_:
          type: string
        enrollment_date_:
          type: string
          format: date
        is_admin_:
          type: boolean
        location_:
          type: string
        address_:
          type: string
        postal_code_:
          type: string
          format: ^\d{4}-\d{3}$
        phone_number_:
          type: integer
        paid_enrollment_:
          type: boolean
        img_:
          type: string
          format: byte
    api_sports_body:
      type: object
      properties:
        name:
          type: string
    sportJoinUser:
      required:
      - fed_id_
      - fed_name_
      - fed_number_
      - is_absent_
      - name_
      - sport_id_
      - type_
      - user_id_
      - username_
      - years_federated_
      type: object
      properties:
        username_:
          type: string
        name_:
          type: string
        user_id_:
          type: integer
        sport_id_:
          type: integer
        type_:
          type: array
          items:
            type: string
        fed_number_:
          type: integer
        fed_id_:
          type: integer
        fed_name_:
          type: string
        years_federated_:
          type: array
          items:
            type: integer
        is_absent_:
          type: boolean
    quota:
      required:
      - date_
      - id_
      - member_id_
      - payment_date_
      - username_
      type: object
      properties:
        id_:
          type: integer
        member_id_:
          type: integer
        username_:
          type: string
        payment_date_:
          type: string
          format: date
        date_:
          type: string
          format: date
    company:
      required:
      - member_id_
      - name_
      - nif_
      type: object
      properties:
        member_id_:
          type: integer
        name_:
          type: string
        nif_:
          type: integer
    companyById:
      required:
      - address_
      - email_
      - has_debt_
      - location_
      - member_id_
      - name_
      - nif_
      - phone_number_
      - postal_code_
      - username_
      type: object
      properties:
        member_id_:
          type: integer
        name_:
          type: string
        nif_:
          type: integer
        location_:
          type: string
        address_:
          type: string
        postal_code_:
          type: string
          format: ^\d{4}-\d{3}$
        email_:
          type: string
        phone_number_:
          type: integer
        username_:
          type: string
        has_debt_:
          type: boolean
    id_sports_body:
      type: object
      properties:
        sid:
          type: integer
        fed_id:
          type: integer
        fed_number:
          type: integer
        fed_name:
          type: string
        type:
          type: array
          items:
            type: string
        years_federated:
          type: array
          items:
            type: integer
    sports_sid_body:
      type: object
      properties:
        sid:
          type: integer
        fed_id:
          type: integer
        fed_number:
          type: integer
        fed_name:
          type: string
        type:
          type: array
          items:
            type: string
        years_federated:
          type: array
          items:
            type: integer
        is_absent:
          type: boolean
    api_quotas_body:
      type: object
      properties:
        date:
          type: string
          format: date
    quotas_id_body:
      type: object
      properties:
        date:
          type: string
          format: date
    api_companies_body:
      type: object
      properties:
        name:
          type: string
        nif:
          type: integer
        phone_number:
          type: integer
        email:
          type: string
        postal_code:
          type: integer
        address:
          type: string
        location:
          type: string
        username:
          type: string
        password:
          type: string
          format: password
    companies_cid_body:
      type: object
      properties:
        name:
          type: string
        nif:
          type: integer
        phone_number:
          type: integer
        email:
          type: string
        postal_code:
          type: integer
        address:
          type: string
        location:
          type: string
  parameters:
    qidParameter:
      name: qid
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: integer
    idParameter:
      name: id
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: integer
    sidParameter:
      name: sid
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: integer
    cidParameter:
      name: cid
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: integer
